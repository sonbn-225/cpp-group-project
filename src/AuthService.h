#ifndef AUTHSERVICE_H
#define AUTHSERVICE_H

#include "DataStorage.h" // Includes UserAccount.h

class AuthService {
private:
    DataStorage& storage;
    UserAccount* currentUser;

public:
    AuthService(DataStorage& ds);

    bool registerUser(const std::string& username, const std::string& password,
                      const std::string& fullName, const std::string& email,
                      const std::string& phone = "", UserRole role = UserRole::REGULAR_USER,
                      bool autoGeneratedPassword = false, UserAccount* createdByAdmin = nullptr);

    bool login(const std::string& username, const std::string& password);
    void logout();
    bool isLoggedIn() const;
    UserAccount* getCurrentUser() const;

    bool changePassword(UserAccount* user, const std::string& oldPassword, const std::string& newPassword);
    bool forceChangePassword(UserAccount* user, const std::string& newPassword);

    bool setupOTP(UserAccount* user);
    bool verifyOTP(UserAccount* user, const std::string& otpCode);
    bool disableOTP(UserAccount* user, const std::string& passwordOrOtp); // Needs strong auth

    bool updateUserProfile(UserAccount* userToUpdate, const std::string& newFullName,
                           const std::string& newEmail, const std::string& newPhone,
                           UserAccount* adminRequesting = nullptr); // adminRequesting for admin edits
};

#endif // AUTHSERVICE_H